---
- summary: |
    Поиск товаров по ключевому слову.
  requirement: |
    При вводе ключевого слова Пользователь должен иметь возможность искать товары по ключевому слову.
  prerequisites: |
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Ключевое слово = iPhone
  steps:
    - Вводим ключевое слово в поле поиска.
    - Проверяем, что результаты поиска отобразились на странице.
  expected-result: |
    Выводится список товаров по ключевому слову.

- summary: |
    Проверка, что при поиске товаров по ключевому слову результат соответствует запросу.
  requirement: |
    При вводе ключевого слова Пользователь получает список товаров в соответствии в запросом (ключевым словом).
  prerequisites:
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Ключевое слово = iPhone
  steps:
    - Вводим ключевое слово.
    - Проверяем каждый элемент в списке результатов, чтобы убедиться, что он соответствует запросу.
    - Завершаем тест, если все элементы поиска соответствуют запросу. Если есть несоответствующие результаты, отметить их для последующего анализа.
  expected-result: |
    Выводится список товаров по ключевому слову в соответствии с запросом. 
    
- summary: |
    Поиск товаров по категории и проверка, что товары в этой категории отображаются корректно. 
  requirement: |
    При выборе категории Пользователь должен иметь возможность искать товары по категории. Товары отображаются только из выбранной категории.
  prerequisites: |
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Категория = smartphones
  steps:
    - Выбираем конкретную категорию из списка.
    - Проверяем, что результаты поиска отобразились на странице.
    - Проверяем, что на странице отображаются товары только из выбранной категории.
    - Завершаем тест, если все элементы поиска соответствуют запросу. Если есть несоответствующие результаты, отметить их для последующего анализа.
  expected-result: |
    Выводится список товаров по категории, товары отображаются только из выбранной категории.

- summary: |
    Поиск товаров по фильтру "Price" (цена) и проверка, что товары отображаются в соответствии с фильтром корректно. 
  requirement: |
    При выборе фильтра "Price" (цена) Пользователь должен иметь возможность фильтровать товары по параметру. Товары отображаются только в соответствии с выбранным параметром.
  prerequisites: |
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Фильтр = Price
    Диапазон цен от 10 до 1000
  steps:
    - Ввести диапазон цен.
    - Проверяем, что результаты поиска отобразились на странице.
    - Проверяем, что отображаемые товары на странице соответствуют выбранному диапазону цен.
    - Завершаем тест, если все элементы поиска соответствуют запросу. Если есть несоответствующие результаты, отметить их для последующего анализа.
  expected-result: |
    Выводится список товаров с фильтрацией по цене, товары соответствуют выбранному параметру.

- summary: |
    Поиск товаров по фильтру "Brand" (бренд) (множественный выбор) и проверка, что товары отображаются в соответствии с фильтром корректно. 
  requirement: |
    При выборе фильтра "Brand" (бренд) Пользователь должен иметь возможность фильтровать товары по параметру. Товары отображаются только в соответствии с выбранным параметром.
  prerequisites: |
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Фильтр = Brand
    Brand 1 = Apple
    Brand 2 = Samsung
    Brand 3 = Huawei
  steps:
    - Выбрать конкретные бренды из списка.
    - Проверяем, что результаты поиска отобразились на странице.
    - Проверяем, что отображаемые товары на странице соответствуют выбранным брендам.
    - Завершаем тест, если все элементы поиска соответствуют запросу. Если есть несоответствующие результаты, отметить их для последующего анализа.
  expected-result: |
    Выводится список товаров с фильтрацией по брендам, товары соответствуют выбранному параметру.

- summary: |
    Поиск товаров по фильтру "In Stock" (в наличии) и проверка, что товары отображаются в соответствии с фильтром корректно, когда фильтр включен. 
  requirement: |
    При выборе фильтра "In Stock" (в наличии) Пользователь должен иметь возможность фильтровать товары по параметру. Товары отображаются только в соответствии с выбранным параметром.
  prerequisites: |
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Фильтр = In Stock
  steps:
    - Выбрать опцию фильтрации по наличию (нажимаем флажок "In Stock").
    - Применить фильтр.
    - Проверяем, что результаты поиска отобразились на странице.
    - Проверяем, что отображаемые товары на странице действительно соответствуют критерию "Товар в наличии".
    - Завершаем тест, если все элементы поиска соответствуют запросу. Если есть несоответствующие результаты, отметить их для последующего анализа.
  expected-result: |
    Выводится список товаров с фильтрацией по цене, товары соответствуют выбранному параметру.

- summary: |
    Поиск товаров по фильтру "In Stock" (в наличии) и проверка, что товары отображаются в соответствии с фильтром корректно, когда фильтр отключен. 
  requirement: |
    При выборе фильтра "In Stock" (в наличии) Пользователь должен иметь возможность фильтровать товары по параметру. Товары отображаются только в соответствии с выбранным параметром.
  prerequisites: |
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Фильтр = In Stock
  steps:
    - Фильтрация по наличию товара отключается (снимаем флажок "In Stock").
    - Применить фильтр (по снятому фильтру).
    - Проверяем, что результаты поиска отобразились на странице.
    - Проверяем, что на странице отображается сообщение "Nothing found!" (ничего не найдено).
    - Завершаем тест, если все элементы поиска соответствуют запросу. Если есть несоответствующие результаты, отметить их для последующего анализа.
  expected-result: |
    Выводится список товаров с фильтрацией по цене, товары соответствуют выбранному параметру.

- summary: |
    Просмотр товаров и подробной информации о товарах. 
  requirement: |
    Пользователь должен иметь возможность просматривать товары и просматривать подробную информацию о товарах.
  prerequisites: |
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Товар 1 = iPhone9
    Товар 2 = MacBook Pro
    Товар 3 = perfume Oil
  steps:
    - Выбрать Товар 1, перейдя на страницу с подробной информацией о нем (шаг 1).
    - Проверяем, что информация о товаре отображается корректно, включая его название, категорию, описание, изображение, количество единиц в наличии, цену (без скидки, со скидкой, размер скидки), рейтинг (шаг 2).
    - Проверяем, что пользователь имеет возможность вернуться к списку товаров или продолжить просматривать другие товары.
    - Повторяем шаги 1-2 для нескольких разных товаров (Товар 2 и Товар 3), убедившись, что информация о каждом товаре отображается корректно.
    - Завершаем тест, если все элементы просмотра товара соответствуют. Если есть несоответствующие результаты, отметить их для последующего анализа.
  expected-result: |
    Пользователь действительно может просматривать товары и получать подробную информацию о каждом из них на веб-странице.

- summary: |
    Добавление товаров в корзину из списка товаров и проверка, что они отображаются в корзине.
  requirement: |
    При добавлении товаров в корзину из списка товаров Пользователь должен иметь возможность добавлять товары в корзину и просматривать содержимое корзины.
  prerequisites: |
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Товар 1 = iPhone9
    Товар 2 = MacBook Pro
  steps:
    - Проверяем, что на странице со списком товаров есть кнопка "Add to cart" (добавить в корзину).
    - Нажимаем на кнопку "Add to cart" для Товар 1 (шаг 1).
    - Проверяем, что товар успешно добавлен в корзину и что пользователю отображается информация об этом, а именно рядом с "Cart" в правом верхнем углу появляется значение с количеством добавленных товаров (шаг 2).
    - Переходим в корзину, используя соответствующую опцию "Cart" на веб-странице (шаг 3).
    - Проверяем, что добавленный товар корректно отображается в корзине, включая его название, количество единиц в наличии, цену (без скидки, со скидкой) и количество добавленных товаров (шаг 4).
    - Добавляем Товар 2 в корзину, повторив шаги 1-4 для Товара 2.
    - Переходим в корзину и проверяем, что все добавленные товары корректно отображаются в ней.
    - Завершаем тест, если все добавленные товары в корзину корректно отображаются в ней. Если есть несоответствующие результаты, отметить их для последующего анализа.
  expected-result: |
    Пользователь может успешно добавлять товары в корзину из списка товаров и просматривать содержимое корзины.

- summary: |
    Добавление товаров в корзину со страницы с подробным описанием информации о товаре и проверка, что товары отображаются в корзине.
  requirement: |
    При добавлении товаров в корзину со страницы с подробным описанием информации о товаре Пользователь должен иметь возможность добавлять товары в корзину и просматривать содержимое корзины.
  prerequisites: |
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Товар 1 = iPhone9
    Товар 2 = MacBook Pro
  steps:
    - Выбираем Товар 1 и переходим на страницу с подробной информацией о товаре.
    - Проверяем, что на странице с подробной информацией о товаре есть кнопка "Add to cart" (добавить в корзину).
    - Нажимаем на кнопку "Add to cart" для Товар 1 (шаг 1).
    - Проверяем, что товар успешно добавлен в корзину и что пользователю отображается информация об этом, а именно рядом с "Cart" в правом верхнем углу появляется значение с количеством добавленных товаров (шаг 2).
    - Переходим в корзину, используя соответствующую опцию "Cart" на веб-странице (шаг 3).
    - Проверяем, что добавленный товар корректно отображается в корзине, включая его название, количество единиц в наличии, цену (без скидки, со скидкой) и количество добавленных товаров (шаг 4).
    - Добавляем Товар 2 в корзину, повторив шаги 1-4 для Товара 2.
    - Переходим в корзину и проверяем, что все добавленные товары корректно отображаются в ней.
    - Завершаем тест, если все добавленные товары в корзину корректно отображаются в ней. Если есть несоответствующие результаты, отметить их для последующего анализа.
  expected-result: |
    Пользователь может успешно добавлять товары в корзину со страницы с подробной информацией о товаре и просматривать содержимое корзины.

- summary: |
    Проверка корректной работы функциональности удаления товаров и обновления количества.
  requirement: |
    Пользователь должен иметь возможность удалять товары из корзины и обновлять количества товаров.
  prerequisites: |
    В браузере открыта страница https://hexlet-products-store.vercel.app/ 
  test-data: |
    Товар 1 = iPhone9
    Товар 2 = MacBook Pro
  steps:
    - Проверяем, что на странице со списком товаров есть кнопка "Add to cart" (добавить в корзину).
    - Нажимаем на кнопку "Add to cart" для Товар 1 (шаг 1).
    - Проверяем, что товар успешно добавлен в корзину и что пользователю отображается информация об этом, а именно рядом с "Cart" в правом верхнем углу появляется значение с количеством добавленных товаров (шаг 2).
    - Переходим в корзину, используя соответствующую опцию "Cart" на веб-странице (шаг 3).
    - Проверяем, что добавленный товар корректно отображается в корзине, включая его название, количество единиц в наличии, цену (без скидки, со скидкой) и количество добавленных товаров (шаг 4).
    - Добавляем Товар 2 в корзину, повторив шаги 1-4 для Товара 2.
    - Проверяем возможность изменения количества товаров в корзине.
    - Нажимаем на количество Товара 1 в корзине, попадаем на страницу с подробной информацией о товаре.
    - На странице с подробной информацией о товаре нажимаем на кнопку "Add to cart".
    - Переходим в корзину, используя соответствующую опцию "Cart" на веб-странице. 
    - Проверяем, что обновление количества товаров отработало корректно.
    - Проверяем, что общая сумма заказа корректно пересчитывается при изменении количества товаров.
    - Проверяем возможность удаления товара из корзины.
    - Нажимаем на кнопку "Delete" (удалить) для Товара 1.
    - Проверяем, что товар успешно удаляется из корзины.
    - Проверяем, что общая сумма заказа корректно пересчитывается при удалении товара.
    - Завершаем тест, убедившись, что все функции управления товарами в корзине работают корректно.
  expected-result: |
    Пользователь может успешно управлять содержимым корзины (удалять, менять количество товаров).
